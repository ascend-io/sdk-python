# formats:
#   <id>.before: run set_creds on this
#   <id>.after: expected result after running set_creds on <id>.before
#   <id>.none: expect no creds setting
dataflow:
  components:
    - id: abs1.before
      readConnector:
        container:
          abs:
            credentialId:
              value: abs_shared_key
    - id: abs1.after
      readConnector:
        container:
          abs:
            credentialId:
              value: abs_shared_key
            credentials:
              sharedKey:
                key: abs_key
    - id: abs2.before
      readConnector:
        container:
          abs:
            credentialId:
              value: abs_service_principal
    - id: abs2.after
      readConnector:
        container:
          abs:
            credentialId:
              value: abs_service_principal
            credentials:
              servicePrincipal:
                clientSecret: service_client_secret
                clientId: service_client_id
                tenant: service_tenant
    - id: s3.before
      readConnector:
        container:
          s3:
            credentialId:
              value: aws
    - id: s3.after
      readConnector:
        container:
          s3:
            credentialId:
              value: aws
            credentials:
              id: aws_id
              secret: aws_secret
    - id: redshift.before
      writeConnector:
        container:
          redshift:
            credentialId:
              value: redshift
            credentials:
              username: rs_username
            stagingContainer:
              credentialId:
                value: aws
              credentials:
                id: aws_id
    - id: redshift.after
      writeConnector:
        container:
          redshift:
            credentialId:
              value: redshift
            credentials:
              username: rs_username
              password: rs_password
            stagingContainer:
              credentialId:
                value: aws
              credentials:
                id: aws_id
                secret: aws_secret
    - id: gcs.before
      readConnector:
        container:
          gcs:
            credentialId:
              value: gcp
    - id: gcs.after
      readConnector:
        container:
          gcs:
            credentialId:
              value: gcp
            credentials:
              jsonKey: gcp_key
    - id: big_query.before
      readConnector:
        container:
          bigQuery:
            credentialId:
              value: gcp
            stagingContainer:
              credentialId:
                value: gcp2
    - id: big_query.after
      readConnector:
        container:
          bigQuery:
            credentialId:
              value: gcp
            credentials:
              jsonKey: gcp_key
            stagingContainer:
              credentialId:
                value: gcp2
              credentials:
                jsonKey: gcp2_key
    - id: snowflake_s3.before
      writeConnector:
        container:
          snowflake:
            credentialId:
              value: snowflake
            credentials:
              username: snow_username
            s3:
              credentialId:
                value: aws
              credentials:
                id: aws_id
    - id: snowflake_s3.after
      writeConnector:
        container:
          snowflake:
            credentialId:
              value: snowflake
            credentials:
              username: snow_username
              password: snow_password
            s3:
              credentialId:
                value: aws
              credentials:
                id: aws_id
                secret: aws_secret
    - id: snowflake_gcs.before
      writeConnector:
        container:
          snowflake:
            credentialId:
              value: snowflake
            credentials:
              username: snow_username
            gcs:
              credentialId:
                value: gcp
    - id: snowflake_gcs.after
      writeConnector:
        container:
          snowflake:
            credentialId:
              value: snowflake
            credentials:
              username: snow_username
              password: snow_password
            gcs:
              credentialId:
                value: gcp
              credentials:
                jsonKey: gcp_key
    - id: mysql.before
      writeConnector:
        container:
          mysql:
            credentialId:
              value: mysql
            credentials:
              username: mysql_username
    - id: mysql.after
      writeConnector:
        container:
          mysql:
            credentialId:
              value: mysql
            credentials:
              username: mysql_username
              password: mysql_password
    - id: byte_function_container.before
      readConnector:
        container:
          byteFunction:
            container:
              credentialsConfiguration:
                id:
                  value: function
    - id: byte_function_container.after
      readConnector:
        container:
          byteFunction:
            container:
              credentialsConfiguration:
                id:
                  value: function
                credentials:
                  secret: function_secret
    - id: spark_function.before
      transform:
        operator:
          sparkFunction:
            credentialsConfiguration:
              id:
                value: function
    - id: spark_function.after
      transform:
        operator:
          sparkFunction:
            credentialsConfiguration:
              id:
                value: function
              credentials:
                secret: function_secret
    - id: view.none
      transform:
        operator:
          sqlQuery:

